
import numpy as np
import scipy as sp
import matplotlib.pyplot as pl
import matplotlib.mlab as mlab
from scipy import fftpack as fftp
from scipy import interpolate
#define vaiables
T = 4*np.pi         #running time 
s = 1000            #sample ponts
f = 40              #frequency (Hz)

m = 0 #mean of the normal distribution of the gaussian noise 
sd = 10 #standard deviation of the normal distribution of the gaussian noise 

#define P-N sine wave
t = np.linspace(0, T, s) #time 
N = len(t)               #no. of sample points
Ts = (t[N-1]-t[0])/N     #sampling interval
Fs = 1/Ts                #sampling frequency

y = np.sin(2*np.pi*f*t/Fs) #provisional signal 
noise = np.random.normal(m,sd,N) #Gaussian Noise 
ny = y + noise #noisy signal 

'''PSD'''
NFFT = 4* Fs
Pxx, freqs = mlab.psd(ny, NFFT = int(NFFT), Fs = Fs)
PSD = interpolate.interp1d(freqs, Pxx)
#plot sine wave 
pl.figure(1) #necessary?
pl.subplot(211)
pl.plot(t,y, label='Provisional Sine wave signal')
pl.xlabel('Time (s)')
pl.ylabel('Amplitude')
pl.grid()

pl.subplot(212)
pl.plot(t, ny, label='Noisy Signal')
pl.xlabel('Time (s)')
pl.ylabel('Amplitude')
pl.grid()

pl.figure(2)
pl.subplot(211)
pl.loglog(freqs, np.sqrt(Pxx))

pl.show()
